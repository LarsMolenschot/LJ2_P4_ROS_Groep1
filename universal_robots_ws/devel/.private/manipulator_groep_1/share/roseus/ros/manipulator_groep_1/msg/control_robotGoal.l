;; Auto-generated. Do not edit!


(when (boundp 'manipulator_groep_1::control_robotGoal)
  (if (not (find-package "MANIPULATOR_GROEP_1"))
    (make-package "MANIPULATOR_GROEP_1"))
  (shadow 'control_robotGoal (find-package "MANIPULATOR_GROEP_1")))
(unless (find-package "MANIPULATOR_GROEP_1::CONTROL_ROBOTGOAL")
  (make-package "MANIPULATOR_GROEP_1::CONTROL_ROBOTGOAL"))

(in-package "ROS")
;;//! \htmlinclude control_robotGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))
(if (not (find-package "STD_MSGS"))
  (ros::roseus-add-msgs "std_msgs"))


(defclass manipulator_groep_1::control_robotGoal
  :super ros::object
  :slots (_lineairpose _position _mode ))

(defmethod manipulator_groep_1::control_robotGoal
  (:init
   (&key
    ((:lineairpose __lineairpose) (instance geometry_msgs::Pose :init))
    ((:position __position) (instance std_msgs::String :init))
    ((:mode __mode) (instance std_msgs::Bool :init))
    )
   (send-super :init)
   (setq _lineairpose __lineairpose)
   (setq _position __position)
   (setq _mode __mode)
   self)
  (:lineairpose
   (&rest __lineairpose)
   (if (keywordp (car __lineairpose))
       (send* _lineairpose __lineairpose)
     (progn
       (if __lineairpose (setq _lineairpose (car __lineairpose)))
       _lineairpose)))
  (:position
   (&rest __position)
   (if (keywordp (car __position))
       (send* _position __position)
     (progn
       (if __position (setq _position (car __position)))
       _position)))
  (:mode
   (&rest __mode)
   (if (keywordp (car __mode))
       (send* _mode __mode)
     (progn
       (if __mode (setq _mode (car __mode)))
       _mode)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Pose _lineairpose
    (send _lineairpose :serialization-length)
    ;; std_msgs/String _position
    (send _position :serialization-length)
    ;; std_msgs/Bool _mode
    (send _mode :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Pose _lineairpose
       (send _lineairpose :serialize s)
     ;; std_msgs/String _position
       (send _position :serialize s)
     ;; std_msgs/Bool _mode
       (send _mode :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Pose _lineairpose
     (send _lineairpose :deserialize buf ptr-) (incf ptr- (send _lineairpose :serialization-length))
   ;; std_msgs/String _position
     (send _position :deserialize buf ptr-) (incf ptr- (send _position :serialization-length))
   ;; std_msgs/Bool _mode
     (send _mode :deserialize buf ptr-) (incf ptr- (send _mode :serialization-length))
   ;;
   self)
  )

(setf (get manipulator_groep_1::control_robotGoal :md5sum-) "e36f01127625ad1eec9d70ff2f265799")
(setf (get manipulator_groep_1::control_robotGoal :datatype-) "manipulator_groep_1/control_robotGoal")
(setf (get manipulator_groep_1::control_robotGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal

geometry_msgs/Pose lineairpose

std_msgs/String position

std_msgs/Bool mode

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

================================================================================
MSG: std_msgs/String
string data

================================================================================
MSG: std_msgs/Bool
bool data
")



(provide :manipulator_groep_1/control_robotGoal "e36f01127625ad1eec9d70ff2f265799")


